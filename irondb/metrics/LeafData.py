# automatically generated by the FlatBuffers compiler, do not modify

# namespace: metrics

import flatbuffers

class LeafData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsLeafData(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LeafData()
        x.Init(buf, n + offset)
        return x

    # LeafData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LeafData
    def Uuid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # LeafData
    def CheckName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # LeafData
    def MetricName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # LeafData
    def Category(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # LeafData
    def EgressFunction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

def LeafDataStart(builder): builder.StartObject(5)
def LeafDataAddUuid(builder, uuid): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(uuid), 0)
def LeafDataAddCheckName(builder, checkName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(checkName), 0)
def LeafDataAddMetricName(builder, metricName): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(metricName), 0)
def LeafDataAddCategory(builder, category): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(category), 0)
def LeafDataAddEgressFunction(builder, egressFunction): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(egressFunction), 0)
def LeafDataEnd(builder): return builder.EndObject()
